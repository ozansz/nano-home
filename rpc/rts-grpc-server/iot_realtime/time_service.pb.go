// Code generated by protoc-gen-go. DO NOT EDIT.
// source: time_service.proto

package iot_realtime

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_496446607cfd027f, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

// RealTime data structure
type RealTime struct {
	Timestamp            int64                `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Parsed               *RealTime_ParsedTime `protobuf:"bytes,2,opt,name=parsed,proto3" json:"parsed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RealTime) Reset()         { *m = RealTime{} }
func (m *RealTime) String() string { return proto.CompactTextString(m) }
func (*RealTime) ProtoMessage()    {}
func (*RealTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_496446607cfd027f, []int{1}
}

func (m *RealTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealTime.Unmarshal(m, b)
}
func (m *RealTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealTime.Marshal(b, m, deterministic)
}
func (m *RealTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealTime.Merge(m, src)
}
func (m *RealTime) XXX_Size() int {
	return xxx_messageInfo_RealTime.Size(m)
}
func (m *RealTime) XXX_DiscardUnknown() {
	xxx_messageInfo_RealTime.DiscardUnknown(m)
}

var xxx_messageInfo_RealTime proto.InternalMessageInfo

func (m *RealTime) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RealTime) GetParsed() *RealTime_ParsedTime {
	if m != nil {
		return m.Parsed
	}
	return nil
}

// ParsedTime data structure
type RealTime_ParsedTime struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	DayOfWeek            string   `protobuf:"bytes,4,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	Hour                 int32    `protobuf:"varint,5,opt,name=hour,proto3" json:"hour,omitempty"`
	Minute               int32    `protobuf:"varint,6,opt,name=minute,proto3" json:"minute,omitempty"`
	Second               int32    `protobuf:"varint,7,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealTime_ParsedTime) Reset()         { *m = RealTime_ParsedTime{} }
func (m *RealTime_ParsedTime) String() string { return proto.CompactTextString(m) }
func (*RealTime_ParsedTime) ProtoMessage()    {}
func (*RealTime_ParsedTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_496446607cfd027f, []int{1, 0}
}

func (m *RealTime_ParsedTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealTime_ParsedTime.Unmarshal(m, b)
}
func (m *RealTime_ParsedTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealTime_ParsedTime.Marshal(b, m, deterministic)
}
func (m *RealTime_ParsedTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealTime_ParsedTime.Merge(m, src)
}
func (m *RealTime_ParsedTime) XXX_Size() int {
	return xxx_messageInfo_RealTime_ParsedTime.Size(m)
}
func (m *RealTime_ParsedTime) XXX_DiscardUnknown() {
	xxx_messageInfo_RealTime_ParsedTime.DiscardUnknown(m)
}

var xxx_messageInfo_RealTime_ParsedTime proto.InternalMessageInfo

func (m *RealTime_ParsedTime) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *RealTime_ParsedTime) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *RealTime_ParsedTime) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *RealTime_ParsedTime) GetDayOfWeek() string {
	if m != nil {
		return m.DayOfWeek
	}
	return ""
}

func (m *RealTime_ParsedTime) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *RealTime_ParsedTime) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *RealTime_ParsedTime) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

// GetGMTTimeRequest data structure
type GetGMTTimeRequest struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGMTTimeRequest) Reset()         { *m = GetGMTTimeRequest{} }
func (m *GetGMTTimeRequest) String() string { return proto.CompactTextString(m) }
func (*GetGMTTimeRequest) ProtoMessage()    {}
func (*GetGMTTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_496446607cfd027f, []int{2}
}

func (m *GetGMTTimeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGMTTimeRequest.Unmarshal(m, b)
}
func (m *GetGMTTimeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGMTTimeRequest.Marshal(b, m, deterministic)
}
func (m *GetGMTTimeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGMTTimeRequest.Merge(m, src)
}
func (m *GetGMTTimeRequest) XXX_Size() int {
	return xxx_messageInfo_GetGMTTimeRequest.Size(m)
}
func (m *GetGMTTimeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGMTTimeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGMTTimeRequest proto.InternalMessageInfo

func (m *GetGMTTimeRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyRequest)(nil), "iot.realtime.EmptyRequest")
	proto.RegisterType((*RealTime)(nil), "iot.realtime.RealTime")
	proto.RegisterType((*RealTime_ParsedTime)(nil), "iot.realtime.RealTime.ParsedTime")
	proto.RegisterType((*GetGMTTimeRequest)(nil), "iot.realtime.GetGMTTimeRequest")
}

func init() { proto.RegisterFile("time_service.proto", fileDescriptor_496446607cfd027f) }

var fileDescriptor_496446607cfd027f = []byte{
	// 328 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x4d, 0x4f, 0xc2, 0x40,
	0x14, 0x4c, 0x81, 0x56, 0xfa, 0x20, 0x7e, 0xbc, 0x18, 0xb2, 0x69, 0x8c, 0x22, 0x27, 0x4e, 0x35,
	0xc1, 0x93, 0x57, 0x13, 0xc2, 0x45, 0xa3, 0x59, 0x49, 0x3c, 0x92, 0xb5, 0x7d, 0x84, 0x06, 0xda,
	0xad, 0xed, 0xa2, 0xe9, 0xdf, 0xf0, 0xec, 0x4f, 0xf0, 0x47, 0x9a, 0xdd, 0x05, 0x0b, 0x51, 0x6f,
	0x33, 0xd3, 0xd7, 0xd9, 0x79, 0xb3, 0x0b, 0xa8, 0x92, 0x94, 0x66, 0x25, 0x15, 0x6f, 0x49, 0x44,
	0x61, 0x5e, 0x48, 0x25, 0xb1, 0x9b, 0x48, 0x15, 0x16, 0x24, 0x56, 0xfa, 0xdb, 0xe0, 0x10, 0xba,
	0xe3, 0x34, 0x57, 0x15, 0xa7, 0xd7, 0x35, 0x95, 0x6a, 0xf0, 0xd1, 0x80, 0x36, 0x27, 0xb1, 0x9a,
	0x26, 0x29, 0xe1, 0x19, 0xf8, 0x7a, 0xa8, 0x54, 0x22, 0xcd, 0x99, 0xd3, 0x77, 0x86, 0x4d, 0x5e,
	0x0b, 0x78, 0x03, 0x5e, 0x2e, 0x8a, 0x92, 0x62, 0xd6, 0xe8, 0x3b, 0xc3, 0xce, 0xe8, 0x32, 0xdc,
	0x75, 0x0e, 0xb7, 0x2e, 0xe1, 0xa3, 0x19, 0xd2, 0x90, 0x6f, 0x7e, 0x08, 0xbe, 0x1c, 0x80, 0x5a,
	0x46, 0x84, 0x56, 0x45, 0xa2, 0x30, 0x47, 0xb8, 0xdc, 0x60, 0x3c, 0x05, 0x37, 0x95, 0x99, 0x5a,
	0x18, 0x73, 0x97, 0x5b, 0x82, 0xc7, 0xd0, 0x8c, 0x45, 0xc5, 0x9a, 0x46, 0xd3, 0x10, 0xcf, 0xa1,
	0x13, 0x8b, 0x6a, 0x26, 0xe7, 0xb3, 0x77, 0xa2, 0x25, 0x6b, 0xf5, 0x9d, 0xa1, 0xcf, 0xfd, 0x58,
	0x54, 0x0f, 0xf3, 0x67, 0xa2, 0xa5, 0xf6, 0x5e, 0xc8, 0x75, 0xc1, 0x5c, 0xeb, 0xad, 0x31, 0xf6,
	0xc0, 0x4b, 0x93, 0x6c, 0xad, 0x88, 0x79, 0x46, 0xdd, 0x30, 0xad, 0x97, 0x14, 0xc9, 0x2c, 0x66,
	0x07, 0x56, 0xb7, 0x6c, 0x70, 0x05, 0x27, 0x13, 0x52, 0x93, 0xfb, 0xa9, 0x59, 0xc2, 0x36, 0x85,
	0x01, 0xb4, 0x57, 0x32, 0x12, 0x2a, 0x91, 0x99, 0x09, 0xee, 0xf3, 0x1f, 0x3e, 0xfa, 0x74, 0xe0,
	0x68, 0xbb, 0xff, 0x93, 0x6d, 0x1f, 0x6f, 0xa1, 0x3b, 0x21, 0x75, 0x27, 0xa3, 0x4d, 0xb9, 0xc1,
	0x7e, 0x5d, 0xbb, 0xb7, 0x10, 0xf4, 0xfe, 0xae, 0x12, 0xc7, 0x00, 0x75, 0x10, 0xbc, 0xd8, 0x9f,
	0xfa, 0x15, 0xf1, 0x3f, 0x9b, 0x17, 0xcf, 0xbc, 0x84, 0xeb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x9c, 0x78, 0x76, 0x6f, 0x1f, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RealTimeServiceClient is the client API for RealTimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RealTimeServiceClient interface {
	// RPC GetLocalTime - Get local time of the server
	GetLocalTime(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RealTime, error)
	// RPC GetGMTTime - Get real time for specific location
	GetGMTTime(ctx context.Context, in *GetGMTTimeRequest, opts ...grpc.CallOption) (*RealTime, error)
}

type realTimeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRealTimeServiceClient(cc *grpc.ClientConn) RealTimeServiceClient {
	return &realTimeServiceClient{cc}
}

func (c *realTimeServiceClient) GetLocalTime(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RealTime, error) {
	out := new(RealTime)
	err := c.cc.Invoke(ctx, "/iot.realtime.RealTimeService/GetLocalTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *realTimeServiceClient) GetGMTTime(ctx context.Context, in *GetGMTTimeRequest, opts ...grpc.CallOption) (*RealTime, error) {
	out := new(RealTime)
	err := c.cc.Invoke(ctx, "/iot.realtime.RealTimeService/GetGMTTime", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RealTimeServiceServer is the server API for RealTimeService service.
type RealTimeServiceServer interface {
	// RPC GetLocalTime - Get local time of the server
	GetLocalTime(context.Context, *EmptyRequest) (*RealTime, error)
	// RPC GetGMTTime - Get real time for specific location
	GetGMTTime(context.Context, *GetGMTTimeRequest) (*RealTime, error)
}

// UnimplementedRealTimeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRealTimeServiceServer struct {
}

func (*UnimplementedRealTimeServiceServer) GetLocalTime(ctx context.Context, req *EmptyRequest) (*RealTime, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLocalTime not implemented")
}
func (*UnimplementedRealTimeServiceServer) GetGMTTime(ctx context.Context, req *GetGMTTimeRequest) (*RealTime, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGMTTime not implemented")
}

func RegisterRealTimeServiceServer(s *grpc.Server, srv RealTimeServiceServer) {
	s.RegisterService(&_RealTimeService_serviceDesc, srv)
}

func _RealTimeService_GetLocalTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealTimeServiceServer).GetLocalTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.realtime.RealTimeService/GetLocalTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealTimeServiceServer).GetLocalTime(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RealTimeService_GetGMTTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGMTTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RealTimeServiceServer).GetGMTTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iot.realtime.RealTimeService/GetGMTTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RealTimeServiceServer).GetGMTTime(ctx, req.(*GetGMTTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RealTimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iot.realtime.RealTimeService",
	HandlerType: (*RealTimeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLocalTime",
			Handler:    _RealTimeService_GetLocalTime_Handler,
		},
		{
			MethodName: "GetGMTTime",
			Handler:    _RealTimeService_GetGMTTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "time_service.proto",
}
